#!/usr/bin/env python
import requests
import json

def get_business_types():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–∏–ø—ã –±–∏–∑–Ω–µ—Å–∞ –∏–∑ API"""
    url = "http://localhost:8000/accounts/api/business-types/"
    
    try:
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            return data.get('business_types', [])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –±–∏–∑–Ω–µ—Å–∞: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API —Ç–∏–ø–æ–≤ –±–∏–∑–Ω–µ—Å–∞: {e}")
        return []

def test_register_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø—ã –±–∏–∑–Ω–µ—Å–∞
    print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –±–∏–∑–Ω–µ—Å–∞...")
    business_types = get_business_types()
    
    if not business_types:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–ø—ã –±–∏–∑–Ω–µ—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        business_type_id = "1"
    else:
        print("‚úÖ –¢–∏–ø—ã –±–∏–∑–Ω–µ—Å–∞ –ø–æ–ª—É—á–µ–Ω—ã:")
        for bt in business_types:
            print(f"  {bt['id']}: {bt['name']}")
        business_type_id = str(business_types[0]['id'])
    
    # URL API
    url = "http://localhost:8000/accounts/api/register/"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "full_name": "–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤",
        "phone": "999123456",
        "company_name": "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è",
        "business_type": business_type_id,
        "password": "testpass123",
        "agree_to_terms": True
    }
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    headers = {
        "Content-Type": "application/json",
    }
    
    try:
        print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
        print(f"üì° URL: {url}")
        print(f"üì¶ –î–∞–Ω–Ω—ã–µ: {json.dumps(test_data, indent=2, ensure_ascii=False)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.post(url, json=test_data, headers=headers)
        
        print(f"\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å JSON –æ—Ç–≤–µ—Ç
        try:
            response_data = response.json()
            print(f"üìÑ –û—Ç–≤–µ—Ç JSON: {json.dumps(response_data, indent=2, ensure_ascii=False)}")
        except json.JSONDecodeError:
            print(f"üìÑ –û—Ç–≤–µ—Ç (–Ω–µ JSON): {response.text}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if response.status_code == 201:
            print("\n‚úÖ –£–°–ü–ï–•! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
            if 'token' in response_data:
                print(f"üîë –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω: {response_data['token'][:50]}...")
            if 'user' in response_data:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {response_data['user']['full_name']}")
        elif response.status_code == 400:
            print("\n‚ùå –û–®–ò–ë–ö–ê –í–ê–õ–ò–î–ê–¶–ò–ò!")
            if 'detail' in response_data:
                print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {response_data['detail']}")
        else:
            print(f"\n‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê! –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø!")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä Django –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {str(e)}")

if __name__ == "__main__":
    test_register_api() 